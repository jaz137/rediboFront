// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Genero {
  MASCULINO
  FEMENINO
  OTRO
}

enum Roles {
  HOST
  RENTER
  DRIVER
}

enum EstadoReserva {
  PENDIENTE
  CONFIRMADA
  EN_CURSO
  COMPLETADA
  CANCELADA
}

enum EstadoCarro {
  DISPONIBLE
  RESERVADO
  MANTENIMIENTO
}

model Usuario {
  id                  Int                     @id @default(autoincrement())
  nombre              String
  correo              String                  @unique
  fecha_nacimiento    DateTime?
  genero              Genero?
  id_ciudad           Int?
  ciudad              Ciudad?                 @relation(fields: [id_ciudad], references: [id])
  contrase√±a          String?
  google_id           String? @unique
  foto                String?
  telefono            String?
  fecha_creacion      DateTime                @default(now())
  fecha_actualizacion DateTime                @updatedAt
  roles               UsuarioRol[]
  favoritos           Favorito[]
  calificaciones      Calificacion[]
  notificaciones      Notificacion[]
  reservas            Reserva[]
  carros              Carro[]                 @relation("CarrosPorUsuario")
  busquedas           Busqueda[]
  recoveryCode        PasswordRecoveryCode[]
  comentarios         ComentarioCarro[]
  reportes            Reporte[]               @relation("ReportesCreados")
  reportesRecibidos   Reporte[]               @relation("ReportesRecibidos")

  @@index([correo])
  @@index([google_id])
  @@index([id_ciudad])
}

model UsuarioRol {
  id         Int         @id @default(autoincrement())
  id_rol     Int
  id_usuario Int
  usuario    Usuario     @relation(fields: [id_usuario], references: [id], onDelete: Cascade)
  rol        Rol         @relation(fields: [id_rol], references: [id])
  favoritos  Favorito[]
  
  @@index([id_usuario])
  @@index([id_rol])
}

model Rol {
  id      Int          @id @default(autoincrement())
  rol     String       @unique
  usuarios UsuarioRol[]
}

model PasswordRecoveryCode {
  id         Int      @id @default(autoincrement())
  id_usuario Int
  usuario    Usuario  @relation(fields: [id_usuario], references: [id], onDelete: Cascade)
  correo     String
  codigo     String
  created_at DateTime @default(now())
  expires_at DateTime
  used       Boolean  @default(false)
  
  @@index([id_usuario])
  @@index([codigo])
}

model Favorito {
  id              Int         @id @default(autoincrement())
  id_usuario_rol  Int
  id_carro        Int
  usuarioRol      UsuarioRol  @relation(fields: [id_usuario_rol], references: [id], onDelete: Cascade)
  carro           Carro       @relation(fields: [id_carro], references: [id], onDelete: Cascade)
  id_usuario      Int?
  usuario         Usuario?    @relation(fields: [id_usuario], references: [id], onDelete: SetNull)
  
  @@unique([id_usuario_rol, id_carro])
  @@index([id_usuario_rol])
  @@index([id_carro])
  @@index([id_usuario])
}

model Notificacion {
  id              Int         @id @default(autoincrement())
  id_usuario_rol  Int
  mensaje         String
  leida           Boolean     @default(false)
  fecha_creacion  DateTime    @default(now())
  usuario         Usuario     @relation(fields: [id_usuario_rol], references: [id], onDelete: Cascade)
  
  @@index([id_usuario_rol])
}

model Carro {
  id                  Int                     @id @default(autoincrement())
  vim                 String
  anio                Int
  marca               String
  modelo              String
  placa               String                  @unique
  id_direccion        Int
  direccion           Direccion               @relation(fields: [id_direccion], references: [id])
  fecha_ingreso       DateTime?               @default(now())
  asientos            Int
  puertas             Int
  soat                Boolean
  precio_por_dia      Float
  num_mantenimientos  Int
  transmision         String
  estado              EstadoCarro             @default(DISPONIBLE)
  id_usuario_rol      Int
  descripcion         String?
  ingresoTotal        Float?                  @default(0)
  NumeroViajes        Int?                    @default(0)
  color               String?
  usuario             Usuario?                @relation("CarrosPorUsuario", fields: [id_usuario_rol], references: [id])
  id_tipodeDescuento  Int?
  tipodeDescuento     tipodeDescuento?        @relation(fields: [id_tipodeDescuento], references: [id])
  disponible_desde    DateTime?
  disponible_hasta    DateTime?
  combustiblesporCarro CombustibleCarro[]
  caracteristicasAdicionalesCarro caracteristicasAdicionalesCarro[]
  contratosAlquiler   contratodeAlquiler[]
  imagenes            Imagen[]
  favoritos           Favorito[]
  calificaciones      Calificacion[]
  reservas            Reserva[]
  seguroCarro         SeguroCarro[]
  comentarios         ComentarioCarro[]

  @@index([marca, modelo])
  @@index([id_direccion])
  @@index([id_usuario_rol])
  @@index([id_tipodeDescuento])
  @@index([estado])
}

model SeguroCarro {
  id             Int       @id @default(autoincrement())
  fechaInicio    DateTime
  fechaFin       DateTime
  id_carro       Int
  carro          Carro     @relation(fields: [id_carro], references: [id], onDelete: Cascade)
  id_seguro      Int
  seguro         Seguro    @relation(fields: [id_seguro], references: [id])
  
  @@index([id_carro])
  @@index([id_seguro])
}

model Seguro {
  id                  Int           @id @default(autoincrement())
  nombre              String
  tipoSeguro          String
  empresa             String
  seguroCarro         SeguroCarro[]
}

model CombustibleCarro {
  id             Int             @id @default(autoincrement())
  id_carro       Int
  carro          Carro           @relation(fields: [id_carro], references: [id], onDelete: Cascade)
  id_combustible Int
  combustible    TipoCombustible @relation(fields: [id_combustible], references: [id])
  
  @@index([id_carro])
  @@index([id_combustible])
}

model TipoCombustible {
  id                 Int                @id @default(autoincrement())
  tipoDeCombustible  String
  id_carro           Int
  combustibleCarro   CombustibleCarro[]
}

model caracteristicasAdicionalesCarro {
  id                            Int                        @id @default(autoincrement())
  id_carro                      Int
  carro                         Carro                      @relation(fields: [id_carro], references: [id], onDelete: Cascade)
  id_carasteristicasAdicionales Int
  carasteristicasAdicionales    CarasteristicasAdicionales @relation(fields: [id_carasteristicasAdicionales], references: [id])
  
  @@index([id_carro])
  @@index([id_carasteristicasAdicionales])
}

model CarasteristicasAdicionales {
  id                            Int                             @id @default(autoincrement())
  nombre                        String
  caracteristicasAdicionalesCarro caracteristicasAdicionalesCarro[]
}

model Imagen {
  id         Int     @id @default(autoincrement())
  data       String?
  public_id  String?
  width      Int?
  height     Int?
  format     String?
  id_carro   Int
  Carro      Carro   @relation(fields: [id_carro], references: [id], onDelete: Cascade)
  
  @@index([id_carro])
}

model Calificacion {
  id             Int      @id @default(autoincrement())
  id_usuario_rol Int
  calf_carro     Int?
  calf_usuario   Int?
  comentario     String?
  id_carro       Int
  id_usuario     Int
  fecha_creacion DateTime @default(now())
  carro          Carro    @relation(fields: [id_carro], references: [id], onDelete: Cascade)
  usuario        Usuario? @relation(fields: [id_usuario], references: [id], onDelete: Cascade)
  
  @@index([id_carro])
  @@index([id_usuario])
}

model Reserva {
  id                     Int           @id @default(autoincrement())
  id_carro               Int
  id_usuario             Int
  kilometraje            Int?
  fecha_creacion         DateTime      @default(now())
  fecha_inicio           DateTime
  montoPagoInicial       Float?
  montoTotalConDescuento Float?
  hora_inicio            Int?
  hora_fin               Int?
  fecha_fin              DateTime?
  fecha_expiracion       DateTime?
  estado                 EstadoReserva @default(PENDIENTE)
  carro                  Carro         @relation(fields: [id_carro], references: [id], onDelete: Cascade)
  usuario                Usuario?      @relation(fields: [id_usuario], references: [id], onDelete: Cascade)
  garantia               Garantia[]
  descuento              Descuento[]
  calificaciones         CalificacionReserva[]
  
  @@index([id_carro])
  @@index([id_usuario])
  @@index([fecha_inicio, fecha_fin])
  @@index([estado])
}

model CalificacionReserva {
  id                Int      @id @default(autoincrement())
  id_reserva        Int
  reserva           Reserva  @relation(fields: [id_reserva], references: [id], onDelete: Cascade)
  comportamiento    Int
  cuidado_vehiculo  Int
  puntualidad       Int
  comentario        String?
  fecha_creacion    DateTime @default(now())
  
  @@index([id_reserva])
}

model Descuento {
  id               Int              @id @default(autoincrement())
  montoDescontado  Float?
  id_descuentoTipo Int?
  tipodeDescuento  tipodeDescuento? @relation(fields: [id_descuentoTipo], references: [id])
  reservas         Reserva[]
  
  @@index([id_descuentoTipo])
}

model tipodeDescuento {
  id           Int        @id @default(autoincrement())
  nombre       String
  porcentaje   Float
  fecha_inicio DateTime?
  fecha_fin    DateTime?
  descuentos   Descuento[]
  carros       Carro[]
}

model Garantia {
  id           Int       @id @default(autoincrement())
  precio       Float
  fecha_limite DateTime
  descripcion  String?
  pagado       Boolean
  pagoPorDanos Boolean?
  id_reserva   Int?
  reserva      Reserva?  @relation(fields: [id_reserva], references: [id], onDelete: SetNull)
  
  @@index([id_reserva])
}

model contratodeAlquiler {
  id             Int     @id @default(autoincrement())
  id_reserva     Int
  kilometraje    Int
  id_carro       Int
  carro          Carro   @relation(fields: [id_carro], references: [id], onDelete: Cascade)
  estado         String  @default("pendiente")
  
  @@index([id_carro])
}

model Ciudad {
  id          Int         @id @default(autoincrement())
  nombre      String
  pais        Pais?       @relation(fields: [id_pais], references: [id])
  id_pais     Int?
  usuarios    Usuario[]
  provincia   Provincia[]
  aeropuerto  aeropuerto[]
  
  @@index([id_pais])
}

model aeropuerto {
  id        Int    @id @default(autoincrement())
  nombre    String
  latitud   Float?
  longitud  Float?
  ciudad    Ciudad @relation(fields: [id_ciudad], references: [id], onDelete: Cascade)
  id_ciudad Int
  
  @@index([id_ciudad])
}

model Pais {
  id         Int      @id @default(autoincrement())
  nombre     String
  ciudad     Ciudad[]
}

model Direccion {
  id           Int        @id @default(autoincrement())
  id_provincia Int
  calle        String
  zona         String?
  num_casa     String?
  latitud      Float?
  longitud     Float?
  provincia    Provincia  @relation(fields: [id_provincia], references: [id])
  carros       Carro[]
  ubicacion    Ubicacion[]
  
  @@index([id_provincia])
}

model Ubicacion {
  id               Int       @id @default(autoincrement())
  direccion        Direccion @relation(fields: [id_direccion], references: [id], onDelete: Cascade)
  id_direccion     Int
  coordenadas      Json      
  radio_cobertura  Int       @default(5000)
  
  @@index([id_direccion])
}

model Provincia {
  id        Int         @id @default(autoincrement())
  nombre    String
  ciudad    Ciudad      @relation(fields: [id_ciudad], references: [id], onDelete: Cascade)   
  id_ciudad Int
  direcciones Direccion[]
  
  @@index([id_ciudad])
}

model Busqueda {
  id              Int       @id @default(autoincrement())
  criterio        String
  fecha_creacion  DateTime  @default(now())
  id_usuario      Int
  usuario         Usuario   @relation(fields: [id_usuario], references: [id], onDelete: Cascade)
  
  @@index([id_usuario])
}

model ComentarioCarro {
  id          Int      @id @default(autoincrement())
  id_carro    Int
  id_usuario  Int
  comentario  String
  calificacion Int     @default(0)
  fecha_creacion DateTime @default(now())
  fecha_actualizacion DateTime @updatedAt
  
  carro       Carro    @relation(fields: [id_carro], references: [id], onDelete: Cascade)
  usuario     Usuario  @relation(fields: [id_usuario], references: [id], onDelete: Cascade)
  
  @@index([id_carro])
  @@index([id_usuario])
}

model Reporte {
  id              Int         @id @default(autoincrement())
  id_reportado    Int        
  id_reportador   Int        
  motivo          String
  informacion_adicional String?
  estado          String      @default("PENDIENTE")
  fecha_creacion  DateTime    @default(now())
  fecha_actualizacion DateTime @updatedAt
  
  reportado       Usuario     @relation("ReportesRecibidos", fields: [id_reportado], references: [id])
  reportador      Usuario     @relation("ReportesCreados", fields: [id_reportador], references: [id])
  
  @@index([id_reportado])
  @@index([id_reportador])
}
